<?php    namespace App\Controller;    use App\Entity\Categorie;    use App\Entity\Intervention;    use App\Entity\Marque;    use App\Entity\PrixInter;    use App\Entity\Produit;    use App\Entity\Serie;    use App\Repository\CategorieRepository;    use App\Repository\MarqueRepository;    use App\Repository\ProduitRepository;    use App\Repository\SerieRepository;    use Doctrine\ORM\EntityManagerInterface;    use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;    use Symfony\Component\HttpFoundation\Request;    use Symfony\Component\HttpFoundation\Response;    use Symfony\Component\Messenger\MessageBusInterface;    use Symfony\Component\Routing\Annotation\Route;    use Twig\Environment;    class PhoneController extends AbstractController    {        private $twig;        private $entityManager;        /**         * @var \App\Entity\Marque[]         */        private array $marques;        public function __construct(Environment $twig, EntityManagerInterface $entityManager, MarqueRepository $marqueRepository)        {            $this->twig = $twig;            $this->entityManager = $entityManager;            $marques = $marqueRepository->findAll();            $this->marques = $marques;        }        /**         * @Route("/serie/{id}", name="seriePhone")         */        public function phoneSerie($id)        {            $phones = $this->getDoctrine()->getRepository(Produit::class)->findBySerieDate($id);            return $this->render('phone/seriePhones.html.twig', [                'produits' => $phones,                'marques' => $this->marques,                'controller_name' => 'PhoneController',            ]);        }        /**         * @Route("/produit_show/{id}/{nomProd}/", name="produit_show")         */        public function produit_show($id, ProduitRepository  $produitRepository): Response        {            $phone = $produitRepository->find($id);            $prixInters = $produitRepository->findPrixInterventions($id);            return $this->render('phone/show.html.twig', [                'produit' => $phone,                'prixInters' => $prixInters,                'marques' => $this->marques,            ]);        }        /**         * @Route("list-produits-marque/{id}", name="list-produits-marque")         */        public function listProduitMarque($id)        {            $produits = $this->getDoctrine()->getRepository(Produit::class)->findByMarqueDate($id);            return $this->render('phone/seriePhones.html.twig', [                'marques' => $this->marques,                'produits' => $produits            ]);        }        /**         * @Route("removePrixInter/{id}", name="removePrixInter")         */        public function removePrixInter($id, EntityManagerInterface $entityManager)        {            $prixInter = $this->getDoctrine()->getRepository(PrixInter::class)->find($id);            $id_produit = $prixInter->getProduit()->getId();            $entityManager->remove($prixInter);            $entityManager->flush();            return $this->redirectToRoute('interventions-produit', ['id' => $id_produit]);        }        /**         * @Route("list-produits-marque-categorie/{id_marque}/{id_categorie}", name="list-produits-marque-categorie")         */        public function listProduitMarqueCategorie($id_marque, $id_categorie)        {            $produits = $this->getDoctrine()->getRepository(Produit::class)->findByMarqueCategorieDate($id_marque, $id_categorie);            return $this->render('phone/seriePhones.html.twig', [                'marques' => $this->marques,                'produits' => $produits            ]);        }        /**         * @Route("list-marques", name="list-marques")         */        public function listMarques()        {            return $this->render('phone/list-marques.html.twig', [                'marques' => $this->marques,            ]);        }        /**         * @Route("list-marques-categorie/{id}", name="list-marques-categorie")         */        public function listMarquesCategorie($id, CategorieRepository $categorieRepository)        {            $categorie = $categorieRepository->find($id);            $marquesDeCategorie = array();            foreach ($categorie->getProduits() as $produit){                if (!in_array($produit->getMarque(), $marquesDeCategorie)){                    $marquesDeCategorie [] = $produit->getMarque();                }            }            return $this->render('phone/list-marques-categorie.html.twig', [                'marques' => $this->marques,                'marquesDeCategorie' => $marquesDeCategorie,                'categorie' => $categorie,            ]);        }    }