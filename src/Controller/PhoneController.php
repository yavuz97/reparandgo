<?php    namespace App\Controller;    use App\Entity\Intervention;    use App\Entity\Marque;    use App\Entity\PrixInter;    use App\Entity\Produit;    use App\Entity\Serie;    use App\Repository\MarqueRepository;    use App\Repository\ProduitRepository;    use App\Repository\SerieRepository;    use Doctrine\ORM\EntityManagerInterface;    use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;    use Symfony\Component\HttpFoundation\Request;    use Symfony\Component\HttpFoundation\Response;    use Symfony\Component\Messenger\MessageBusInterface;    use Symfony\Component\Routing\Annotation\Route;    use Twig\Environment;    class PhoneController extends AbstractController    {        private $twig;        private $entityManager;        /**         * @var \App\Entity\Marque[]         */        private array $marques;        public function __construct(Environment $twig, EntityManagerInterface $entityManager, MarqueRepository $marqueRepository)        {            $this->twig = $twig;            $this->entityManager = $entityManager;            $marques = $marqueRepository->findAll();            $this->marques = $marques;        }        /**         * @Route("/serie/{id}", name="seriePhone")         */        public function phoneSerie($id)        {            $serie = $this->getDoctrine()->getRepository(Serie::class)->find($id);            $phones = $this->getDoctrine()->getRepository(Produit::class)->findBy(['serie' => $serie,]);            return $this->render('phone/seriePhones.html.twig', [                'produits' => $phones,                'marques' => $this->marques,                'controller_name' => 'PhoneController',            ]);        }        /**         * @Route("/tout_nos_produits", name="tout_nos_produits")         */        public function tout_nos_produits()        {            $phones = $this->getDoctrine()->getRepository(Produit::class)->findAll();            return $this->render('phone/seriePhones.html.twig', [                'produits' => $phones,                'marques' => $this->marques,                'controller_name' => 'PhoneController',            ]);        }        /**         * @Route("/produits_deMarque/{id}", name="produits_deMarque")         */        public function produits_deMarque($id)        {            $marque = $this->getDoctrine()->getRepository(Marque::class)->find($id);            $phones = $this->getDoctrine()->getRepository(Produit::class)->findBy([                'marque' => $marque            ]);            return $this->render('phone/seriePhones.html.twig', [                'produits' => $phones,                'marques' => $this->marques,                'controller_name' => 'PhoneController',            ]);        }        /**         * @Route("/produit_show/{id}", name="produit_show")         */        public function produit_show($id): Response        {            $phone = $this->getDoctrine()->getRepository(Produit::class)->find($id);            return $this->render('phone/show.html.twig', [                'produit' => $phone,                'marques' => $this->marques,            ]);        }        /**         * @Route("/produit_showDyno/{id}", name="produit_showDyno")         */        public function produit_showDyno($id): Response        {            $phone = $this->getDoctrine()->getRepository(Produit::class)->find($id);            return $this->render('phone/showDyno.html.twig', [                'produit' => $phone,                'marques' => $this->marques,            ]);        }        /**         * @Route("list-produits", name="list-produits")         */        public function listProduit()        {            $produits = $this->getDoctrine()->getRepository(Produit::class)->findAll();            return $this->render('admin/phone/list-produits.html.twig', [                'marques' => $this->marques,                'produits' => $produits            ]);        }        public function tabPrixInter($id)        {            // retoure une tableau avec les valeurs des intervention et les prix pour un produit donnÃ©e            $interventions = $this->getDoctrine()->getRepository(Intervention::class)->findAll();            $produit = $this->getDoctrine()->getRepository(Produit::class)->find($id);            $tab = array();            foreach ($interventions as $intervention) {                $prixInter = $this->getDoctrine()->getRepository(PrixInter::class)->findByProdInter($id, $intervention->getId());                $prix = null;                $duree = null;                $id_prixInter = null;                if ($prixInter) {                    $prix = $prixInter->getPrix();                    $duree = $prixInter->getDuree();                    $id_prixInter = $prixInter->getId();                }                $tab [] = [                    'id_intervention' => $intervention->getId(),                    'nom_intervention' => $intervention->getNom(),                    'id_produit' => $produit->getId(),                    'id_prixInter' => $id_prixInter,                    'prix' => $prix,                    'duree' => $duree                ];            }            return $tab;        }        /**         * @Route("interventions-produit/{id}", name="interventions-produit")         */        public function interventionProduit($id, Request $request, EntityManagerInterface $entityManager)        {            $produit = $this->getDoctrine()->getRepository(Produit::class)->find($id);            $tabInter = $this->tabPrixInter($id);            if ($request->get('validation')) {                for ($x = 0; $x < count($request->get('prixInter')['prix']); $x++) {                    if ($request->get('prixInter')['prix'][$x]) {                        $prix = $request->get('prixInter')['prix'][$x];                        $duree = $request->get('prixInter')['duree'][$x];                        $intervention = $this->getDoctrine()->getRepository(Intervention::class)->find($request->get('prixInter')['id_intervention'][$x]);                        $prixInter = $this->getDoctrine()->getRepository(PrixInter::class)->find($request->get('prixInter')['id_prixInter'][$x]);                        if (!$prixInter) {                            $prixInter = new PrixInter();                        }                        if ($duree) {//                        dd($duree);                            $prixInter->setDuree(new \DateTime($duree));                        }                        $prixInter->setProduit($produit);                        $prixInter->setIntervention($intervention);                        $prixInter->setPrix($prix);                        $entityManager->persist($prixInter);                        $entityManager->flush();                    }                }                return $this->redirectToRoute('interventions-produit', ['id' => $id]);            }            return $this->render('admin/phone/interventions-produit.html.twig', [                'tabPrixInter' => $tabInter,                'produit' => $produit,            ]);        }        /**         * @Route("removePrixInter/{id}", name="removePrixInter")         */        public function removePrixInter($id, EntityManagerInterface $entityManager)        {            $prixInter = $this->getDoctrine()->getRepository(PrixInter::class)->find($id);            $id_produit = $prixInter->getProduit()->getId();            $entityManager->remove($prixInter);            $entityManager->flush();            return $this->redirectToRoute('interventions-produit', ['id' => $id_produit]);        }        /**         * @Route("list-marques", name="list-marques")         */        public function listMarques()        {            return $this->render('phone/list-marques.html.twig', [                'marques' => $this->marques,            ]);        }    }